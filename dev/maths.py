commands = (
    ("accent", "\\acute", "#X301"),
    ("accent", "\\bar", "#X304"),
    ("accent", "\\breve", "#X306"),
    ("accent", "\\check", "#X30C"),
    ("accent", "\\ddot", "#X308"),
    ("accent", "\\dot", "#X307"),
    ("accent", "\\grave", "#X300"),
    ("accent", "\\hat", "#X302"),
    ("accent", "\\tilde", "#X303"),
    ("accent", "\\vec", "#X20D7"),
    ("arrow", "\\Downarrow", "#X21D3"),
    ("arrow", "\\Leftarrow", "#X21D0"),
    ("arrow", "\\Leftrightarrow", "#X21D4"),
    ("arrow", "\\Longleftarrow", "#X27F8"),
    ("arrow", "\\Longleftrightarrow", "#X27FA"),
    ("arrow", "\\Longrightarrow", "#X27F9"),
    ("arrow", "\\Rightarrow", "#X21D2"),
    ("arrow", "\\Uparrow", "#X21D1"),
    ("arrow", "\\Updownarrow", "#X21D5"),
    ("arrow", "\\downarrow", "#X2193"),
    ("arrow", "\\hookleftarrow", "#X21A9"),
    ("arrow", "\\hookrightarrow", "#X21AA"),
    ("arrow", "\\leftarrow", "#X2190"),
    ("arrow", "\\leftharpoondown", "#X21BD"),
    ("arrow", "\\leftharpoonup", "#X21BC"),
    ("arrow", "\\leftrightarrow", "#X2194"),
    ("arrow", "\\longleftarrow", "#X27F5"),
    ("arrow", "\\longleftrightarrow", "#X27F7"),
    ("arrow", "\\longmapsto", "#X27FC"),
    ("arrow", "\\longrightarrow", "#X27F6"),
    ("arrow", "\\mapsto", "#X21A6"),
    ("arrow", "\\nearrow", "#X2197"),
    ("arrow", "\\nwarrow", "#X2196"),
    ("arrow", "\\rightarrow", "#X2192"),
    ("arrow", "\\rightharpoondown", "#X21C1"),
    ("arrow", "\\rightharpoonup", "#X21C0"),
    ("arrow", "\\searrow", "#X2198"),
    ("arrow", "\\swarrow", "#X2199"),
    ("arrow", "\\uparrow", "#X2191"),
    ("arrow", "\\updownarrow", "#X2195"),
    ("bin", "\\amalg", "#X2A3F"),
    ("bin", "\\ast", "#X2217"),
    ("bin", "\\bigcirc", "#X25CB"),
    ("bin", "\\bigtriangledown", "#X25BD"),
    ("bin", "\\bigtriangleup", "#X25B3"),
    ("bin", "\\bullet", "#X2219"),
    ("bin", "\\cap", "#X2229"),
    ("bin", "\\cdot", "#X22C5"),
    ("bin", "\\circ", "#X2218"),
    ("bin", "\\cup", "#X222A"),
    ("bin", "\\dagger", "#X2020"),
    ("bin", "\\ddagger", "#X2021"),
    ("bin", "\\diamond", "#X22C4"),
    ("bin", "\\div", "#XF7"),
    ("bin", "\\lhd"),
    ("bin", "\\mp", "#X2213"),
    ("bin", "\\odot", "#X2299"),
    ("bin", "\\ominus", "#X2296"),
    ("bin", "\\oplus", "#X2295"),
    ("bin", "\\oslash", "#X2205"),
    ("bin", "\\otimes", "#X2297"),
    ("bin", "\\pm", "#XB1"),
    ("bin", "\\rhd"),
    ("bin", "\\setminus", "#X2216"),
    ("bin", "\\sqcap", "#X2293"),
    ("bin", "\\star", "#X22C6"),
    ("bin", "\\times", "#XD7"),
    ("bin", "\\triangleleft", "#X25C1"),
    ("bin", "\\triangleright", "#X25B7"),
    ("bin", "\\unlhd"),
    ("bin", "\\unrhd"),
    ("bin", "\\uplus", "#X228E"),
    ("bin", "\\vee", "#X2228"),
    ("bin", "\\wedge", "#X2227"),
    ("bin", "\\wr", "#X2240"),
    ("constr", "\\frac"),
    ("constr", "\\overbrace", "#XFE37"),
    ("constr", "\\overleftarrow", "#X20D6"),
    ("constr", "\\overline"),
    ("constr", "\\overrightarrow"),
    ("constr", "\\sqrt", "#X221A"),
    ("constr", "\\underbrace", "#XFE38"),
    ("constr", "\\underline"),
    ("constr", "\\widehat", "#X302"),
    ("constr", "\\widetilde", "#X303"),
    ("delim", "\\Arrowvert"),
    ("delim", "\\arrowvert"),
    ("delim", "\\backslash", "#X5C"),
    ("delim", "\\bracevert"),
    ("delim", "\\langle", "#X27E8"),
    ("delim", "\\lceil", "#X2308"),
    ("delim", "\\lfloor", "#X230A"),
    ("delim", "\\lgroup"),
    ("delim", "\\lmoustache", "#X23B0"),
    ("delim", "\\rangle", "#X27E9"),
    ("delim", "\\rceil", "#X2309"),
    ("delim", "\\rfloor", "#X230B"),
    ("delim", "\\rgroup"),
    ("delim", "\\rmoustache", "#X23B1"),
    # ("delim", "\\{"),
    # ("delim", "\\|"),
    # ("delim", "\\}"),
    ("greek", "\\alpha", "#X3B1"),
    ("greek", "\\beta", "#X3B2"),
    ("greek", "\\chi", "#X3C7"),
    ("greek", "\\delta", "#X3B4"),
    ("greek", "\\epsilon", "#X3F5"),
    ("greek", "\\eta", "#X3B7"),
    ("greek", "\\gamma", "#X3B3"),
    ("greek", "\\iota", "#X3B9"),
    ("greek", "\\kappa", "#X3BA"),
    ("greek", "\\lambda", "#X3BB"),
    ("greek", "\\mu", "#X3BC"),
    ("greek", "\\nu", "#X3BD"),
    ("greek", "\\omega", "#X3C9"),
    ("greek", "\\phi", "#X3D5"),
    ("greek", "\\pi", "#X3C0"),
    ("greek", "\\psi", "#X3C8"),
    ("greek", "\\rho", "#X3C1"),
    ("greek", "\\sigma", "#X3C3"),
    ("greek", "\\tau", "#X3C4"),
    ("greek", "\\theta", "#X3B8"),
    ("greek", "\\upsilon", "#X3C5"),
    ("greek", "\\varepsilon", "#X3B5"),
    ("greek", "\\varphi", "#X3C6"),
    ("greek", "\\varpi", "#X3D6"),
    ("greek", "\\varrho", "#X3F1"),
    ("greek", "\\varsigma", "#X3C2"),
    ("greek", "\\vartheta", "#X3D1"),
    ("greek", "\\xi", "#X3BE"),
    ("greek", "\\zeta", "#X3B6"),
    ("Greek", "\\Delta", "#X394"),
    ("Greek", "\\Gamma", "#X393"),
    ("Greek", "\\Lambda", "#X39B"),
    ("Greek", "\\Omega", "#X3A9"),
    ("Greek", "\\Phi", "#X3A6"),
    ("Greek", "\\Pi", "#X3A0"),
    ("Greek", "\\Psi", "#X3A8"),
    ("Greek", "\\Sigma", "#X3A3"),
    ("Greek", "\\Theta", "#X398"),
    ("Greek", "\\Upsilon", "#X3D2"),
    ("Greek", "\\Xi", "#X39E"),
    ("misc", "\\Im", "#X2111"),
    ("misc", "\\Re", "#X211C"),
    ("misc", "\\aleph", "#X2135"),
    ("misc", "\\angle", "#X2220"),
    ("misc", "\\bot", "#X22A5"),
    ("misc", "\\clubsuit", "#X2663"),
    ("misc", "\\diamondsuit", "#X2662"),
    ("misc", "\\ell", "#X2113"),
    ("misc", "\\emptyset", "#X2205"),
    ("misc", "\\exists", "#X2203"),
    ("misc", "\\flat", "#X266D"),
    ("misc", "\\forall", "#X2200"),
    ("misc", "\\hbar", "#X210F"),
    ("misc", "\\heartsuit", "#X2661"),
    ("misc", "\\imath", "#X131"),
    ("misc", "\\infty", "#X221E"),
    ("misc", "\\jmath", "#X1D6A5"),
    ("misc", "\\mho", "#X2127"),
    ("misc", "\\nabla", "#X2207"),
    ("misc", "\\natural", "#X266E"),
    ("misc", "\\neg", "#XAC"),
    ("misc", "\\not", "#X338"),
    ("misc", "\\partial", "#X2202"),
    ("misc", "\\prime", "#X2032"),
    ("misc", "\\sharp", "#X266F"),
    ("misc", "\\spadesuit", "#X2660"),
    ("misc", "\\surd", "#X221A"),
    ("misc", "\\top", "#X22A4"),
    ("misc", "\\triangle", "#X25B3"),
    ("misc", "\\wp", "#X2118"),
    ("nonsymb", "\\Box"),
    ("nonsymb", "\\Diamond"),
    ("nonsymb", "\\Pr"),
    ("nonsymb", "\\arccos"),
    ("nonsymb", "\\arcsin"),
    ("nonsymb", "\\arctan"),
    ("nonsymb", "\\arg"),
    ("nonsymb", "\\cos"),
    ("nonsymb", "\\cosh"),
    ("nonsymb", "\\cot"),
    ("nonsymb", "\\coth"),
    ("nonsymb", "\\csc"),
    ("nonsymb", "\\deg"),
    ("nonsymb", "\\det"),
    ("nonsymb", "\\dim"),
    ("nonsymb", "\\exp"),
    ("nonsymb", "\\gcd"),
    ("nonsymb", "\\hom"),
    ("nonsymb", "\\inf"),
    ("nonsymb", "\\ker"),
    ("nonsymb", "\\lg"),
    ("nonsymb", "\\lim"),
    ("nonsymb", "\\liminf"),
    ("nonsymb", "\\limsup"),
    ("nonsymb", "\\ln"),
    ("nonsymb", "\\log"),
    ("nonsymb", "\\max"),
    ("nonsymb", "\\min"),
    ("nonsymb", "\\sec"),
    ("nonsymb", "\\sin"),
    ("nonsymb", "\\sinh"),
    ("nonsymb", "\\sup"),
    ("nonsymb", "\\tan"),
    ("nonsymb", "\\tanh"),
    ("punct", "\\cdots", "#X22EF"),
    ("punct", "\\colon", "#X3A"),
    ("punct", "\\ddots", "#X22F1"),
    ("punct", "\\ldots", "#X2026"),
    ("punct", "\\vdots", "#X22EE"),
    ("rel", "\\Join", "#X2A1D"),
    ("rel", "\\approx", "#X2248"),
    ("rel", "\\asymp", "#X224D"),
    ("rel", "\\bowtie", "#X22C8"),
    ("rel", "\\cong", "#X2245"),
    ("rel", "\\dashv", "#X22A3"),
    ("rel", "\\doteq", "#X2250"),
    ("rel", "\\equiv", "#X2261"),
    ("rel", "\\frown", "#X2322"),
    ("rel", "\\geq", "#X2265"),
    ("rel", "\\gg", "#X226B"),
    ("rel", "\\in", "#X2208"),
    ("rel", "\\leq", "#X2264"),
    ("rel", "\\ll", "#X226A"),
    ("rel", "\\mid", "#X2223"),
    ("rel", "\\models", "#X22A7"),
    ("rel", "\\neq", "#X2260"),
    ("rel", "\\ni", "#X220B"),
    ("rel", "\\parallel", "#X2225"),
    ("rel", "\\perp", "#X27C2"),
    ("rel", "\\prec", "#X227A"),
    ("rel", "\\preceq", "#X2AAF"),
    ("rel", "\\propto", "#X221D"),
    ("rel", "\\qed", "#X220E"),
    ("rel", "\\sim", "#X223C"),
    ("rel", "\\simeq", "#X2243"),
    ("rel", "\\smile", "#X2323"),
    ("rel", "\\sqsubset", "#X228F"),
    ("rel", "\\sqsubseteq", "#X2291"),
    ("rel", "\\sqsupset", "#X2290"),
    ("rel", "\\sqsupseteq", "#X2292"),
    ("rel", "\\subset", "#X2282"),
    ("rel", "\\subseteq", "#X2286"),
    ("rel", "\\succ", "#X227B"),
    ("rel", "\\succeq", "#X2AB0"),
    ("rel", "\\supset", "#X2283"),
    ("rel", "\\supseteq", "#X2287"),
    ("rel", "\\vdash", "#X22A2"),
    ("var", "\\bigcap", "#X22C2"),
    ("var", "\\bigcup", "#X22C3"),
    ("var", "\\bigodot", "#X2A00"),
    ("var", "\\bigoplus", "#X2A01"),
    ("var", "\\bigotimes", "#X2A02"),
    ("var", "\\bigsqcup", "#X2A06"),
    ("var", "\\biguplus", "#X2A04"),
    ("var", "\\bigvee", "#X22C1"),
    ("var", "\\bigwedge", "#X22C0"),
    ("var", "\\coprod", "#X2210"),
    ("var", "\\int", "#X222B"),
    ("var", "\\oint", "#X222E"),
    ("var", "\\prod", "#X220F"),
    ("var", "\\sum", "#X2211"),
    ("bin", "\\land", 8743, "∧"),
    ("bin", "\\lor", 8744, "∨"),
    ("close", "\\rbrace", 125, "}"),
    ("fence", "\\vert", 124, "|"),
    ("fence", "\\Vert", 8214, "‖"),
    ("open", "\\lbrace", 123, "{"),
    ("ord", "\\mathdollar", 36, "$"),
    ("ord", "\\lnot", 172, "¬"),
    ("rel", "\\gets", 8592, "←"),
    ("rel", "\\to", 8594, "→"),
    ("rel", "\\owns", 8715, "∋"),
    ("rel", "\\ne", 8800, "≠"),
    ("rel", "\\le", 8804, "≤"),
    ("rel", "\\ge", 8805, "≥"),
    ("misc", "\\P", 182, "¶"),
    ("misc", "\\textpilcrow", 182, "¶"),
)

text = '''
class %s(BaseVoidElement):
    """\\u%s related to `%s` category.
    """
    start_tag = "%s"
'''
with open("maths.py", "w") as f:
    for command in commands:
        f.write(
            text
            % (
                command[1]
                .replace("\\", "")
                .capitalize()
                .replace(" ", "")
                .replace("author", "Author")
                .replace("input", "Input"),
                (
                    (
                        (
                            str(command[2]).replace("#X", "").replace("#", "").lower()
                            + ((" " + str(command[3])) if len(command) > 3 else "")
                        )
                        if len(command) > 2
                        else ""
                    )
                    if len(command) > 2 and isinstance(command[2], str)
                    else (" " + str(command[3]))
                    if len(command) > 3
                    else ""
                ),
                command[0],
                command[1].replace("\\", ""),
            ),
        )
